name: release

# on:
#   release:
#     types: [published]

on:
  push:
    branches:
      - "main"
      - "releases/**"

permissions:
  actions: "write"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest] # ubuntu-latest, macos-latest,
        node: ["18"]
        arch: ["arm64", "x64"]

    env:
      PREBUILD_ARCH: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Checking conditions
        if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'arm64' }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install
        run: npm install --ignore-scripts

      - name: Prebuildify for ${{ matrix.os }} and Node.js ${{ matrix.node }}
        run: npm run prebuildify

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds
          path: prebuilds

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Download prebuilt artifacts
        uses: actions/download-artifact@v2
        with:
          name: prebuilds
          path: prebuilds

      - name: Install and build TypeScript
        run: npm install && npm run build:ts

      - name: Publish
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
